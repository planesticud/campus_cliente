kind: pipeline
name: campus_cliente

steps:
- name: build
  image: node
  commands:
  - apt-get update -y
  - apt-get install -y zip
  - rm -rf node_modules
  - npm i
  - npm install node-sass
  - npm run lint
  - npm run build --build-optimizer=false
  when:
    branch:
    - develop
    event:
    - push
- name: publish-s3  
  image: plugins/s3
  settings:
    bucket: campus-cliente
    acl: public-read
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    region: us-east-1
    source: dist/**/*
    target: /
    strip_prefix: dist
  when:
    branch:
    - develop
    event:
    - push
- name: build-deploy
  image: alpine
  environment:
    AWS_KEY_ID:
      from_secret: aws_access_key_id
    AWS_SECRET_KEY:
      from_secret: aws_secret_access_key
  commands:
  - apk update && apk add zip
  - apk --no-cache add ca-certificates curl bash jq py2-pip
  - pip install awscli
  - aws configure set aws_access_key_id $AWS_KEY_ID
  - aws configure set aws_secret_access_key $AWS_SECRET_KEY
  - aws configure set default.region us-east-1
  - aws cloudfront update-distribution --id E26VS5XA3057IM --default-root-object index.html
- name: notify
  image: appleboy/drone-telegram
  settings:
    token:
      from_secret: telegram2
    to:
      from_secret: id2
    format: html
    message: >
      {{#success build.status}}
        <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">SUCCESS</a>
        <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
      {{else}}
        <code>{{repo.owner}}/{{repo.name}}</code> <a href="{{build.link}}">FAILURE</a>
        <code>{{commit.branch}}</code>@<a href="{{commit.link}}">{{truncate commit.sha 7}}</a>
      {{/success}}
  when:
   status:
   - failure
   - success
